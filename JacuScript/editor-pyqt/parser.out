Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> declaracion_list
Rule 2     declaracion_list -> declaracion_list declaracion
Rule 3     declaracion_list -> declaracion
Rule 4     declaracion -> var_declaracion
Rule 5     declaracion -> fun_declaracion
Rule 6     declaracion -> libreria
Rule 7     libreria -> IMPORTAME CADENA PUNTOCOMA
Rule 8     var_declaracion -> type_specifier ID PUNTOCOMA
Rule 9     var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA
Rule 10    var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA
Rule 11    var_declaracion -> ID IGUAL expression PUNTOCOMA
Rule 12    type_specifier -> ENTERO
Rule 13    type_specifier -> REAL
Rule 14    type_specifier -> BOOL
Rule 15    type_specifier -> CAR
Rule 16    fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt
Rule 17    params -> param_list
Rule 18    params -> empty
Rule 19    param_list -> param_list COMA param
Rule 20    param_list -> param
Rule 21    param_list -> empty
Rule 22    param -> type_specifier ID
Rule 23    param -> type_specifier ID LCORCHETE RCORCHETE
Rule 24    compount_stmt -> LLLAVE local_declarations statement_list RLLAVE
Rule 25    local_declarations -> local_declarations var_declaracion
Rule 26    local_declarations -> empty
Rule 27    statement_list -> statement_list statement
Rule 28    statement_list -> empty
Rule 29    statement -> expression_stmt
Rule 30    statement -> compount_stmt
Rule 31    statement -> selection_stmt
Rule 32    statement -> iteration_stmt
Rule 33    statement -> return_stmt
Rule 34    statement -> para_stmt
Rule 35    statement -> fun_declaracion
Rule 36    expression_stmt -> expression PUNTOCOMA
Rule 37    expression_stmt -> PUNTOCOMA
Rule 38    selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement
Rule 39    selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement
Rule 40    selection_stmt -> SI LPAREN expression RPAREN statement
Rule 41    iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement
Rule 42    para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement
Rule 43    return_stmt -> REGRESA PUNTOCOMA
Rule 44    return_stmt -> REGRESA expression PUNTOCOMA
Rule 45    expression -> var IGUAL expression
Rule 46    expression -> comp_expression
Rule 47    var -> ID
Rule 48    var -> ID LCORCHETE expression RCORCHETE
Rule 49    comp_expression -> simple_expression compop simple_expression
Rule 50    comp_expression -> simple_expression
Rule 51    compop -> AND
Rule 52    compop -> OR
Rule 53    compop -> XOR
Rule 54    compop -> NOT
Rule 55    simple_expression -> additive_expression relop additive_expression
Rule 56    simple_expression -> additive_expression
Rule 57    relop -> MENOR
Rule 58    relop -> MENORIGUAL
Rule 59    relop -> MAYOR
Rule 60    relop -> MAYORIGUAL
Rule 61    relop -> IGUALDAD
Rule 62    relop -> NEGACION
Rule 63    relop -> DIFERENTE
Rule 64    additive_expression -> additive_expression addop term
Rule 65    additive_expression -> term
Rule 66    addop -> SUMA
Rule 67    addop -> RESTA
Rule 68    term -> term mulop factor
Rule 69    term -> factor
Rule 70    mulop -> PRODUCTO
Rule 71    mulop -> DIVISION
Rule 72    factor -> LPAREN expression RPAREN
Rule 73    factor -> var
Rule 74    factor -> call
Rule 75    factor -> NUMERO
Rule 76    factor -> CADENA
Rule 77    factor -> FLOTANTE
Rule 78    factor -> NULO
Rule 79    call -> ID LPAREN args RPAREN
Rule 80    args -> args_list
Rule 81    args -> empty
Rule 82    args_list -> args_list COMA expression
Rule 83    args_list -> expression
Rule 84    empty -> <empty>

Terminals, with rules where they appear

AND                  : 51
BOOL                 : 14
CADENA               : 7 76
CAR                  : 15
COMA                 : 19 42 42 82
DEPLANO              : 38
DIFERENTE            : 63
DIVISION             : 71
ENTERO               : 12
FLOTANTE             : 77
FUNCION              : 16
ID                   : 8 9 10 11 16 22 23 47 48 79
IGUAL                : 10 11 45
IGUALDAD             : 61
IMPORTAME            : 7
LCORCHETE            : 9 23 48
LLLAVE               : 24
LPAREN               : 16 38 38 39 39 40 41 42 72 79
MAYOR                : 59
MAYORIGUAL           : 60
MENOR                : 57
MENORIGUAL           : 58
MIENTRAS             : 41
NEGACION             : 62
NOT                  : 54
NULO                 : 78
NUMERO               : 9 75
OR                   : 52
PARA                 : 42
PRODUCTO             : 70
PUNTOCOMA            : 7 8 9 10 11 36 37 43 44
RCORCHETE            : 9 23 48
REAL                 : 13
REGRESA              : 43 44
RESTA                : 67
RLLAVE               : 24
RPAREN               : 16 38 38 39 39 40 41 42 72 79
SI                   : 38 39 40
SINO                 : 38 39
SUMA                 : 66
XOR                  : 53
error                : 

Nonterminals, with rules where they appear

additive_expression  : 55 55 56 64
addop                : 64
args                 : 79
args_list            : 80 82
call                 : 74
comp_expression      : 46
compop               : 49
compount_stmt        : 16 30
declaracion          : 2 3
declaracion_list     : 1 2
empty                : 18 21 26 28 81
expression           : 10 11 36 38 38 39 39 40 41 42 42 42 44 45 48 72 82 83
expression_stmt      : 29
factor               : 68 69
fun_declaracion      : 5 35
iteration_stmt       : 32
libreria             : 6
local_declarations   : 24 25
mulop                : 68
para_stmt            : 34
param                : 19 20
param_list           : 17 19
params               : 16
program              : 0
relop                : 55
return_stmt          : 33
selection_stmt       : 31
simple_expression    : 49 49 50
statement            : 27 38 38 38 39 39 40 41 42
statement_list       : 24 27
term                 : 64 65 68
type_specifier       : 8 9 10 22 23
var                  : 45 73
var_declaracion      : 4 25

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaracion_list
    (2) declaracion_list -> . declaracion_list declaracion
    (3) declaracion_list -> . declaracion
    (4) declaracion -> . var_declaracion
    (5) declaracion -> . fun_declaracion
    (6) declaracion -> . libreria
    (8) var_declaracion -> . type_specifier ID PUNTOCOMA
    (9) var_declaracion -> . type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA
    (10) var_declaracion -> . type_specifier ID IGUAL expression PUNTOCOMA
    (11) var_declaracion -> . ID IGUAL expression PUNTOCOMA
    (16) fun_declaracion -> . FUNCION ID LPAREN params RPAREN compount_stmt
    (7) libreria -> . IMPORTAME CADENA PUNTOCOMA
    (12) type_specifier -> . ENTERO
    (13) type_specifier -> . REAL
    (14) type_specifier -> . BOOL
    (15) type_specifier -> . CAR

    ID              shift and go to state 8
    FUNCION         shift and go to state 9
    IMPORTAME       shift and go to state 11
    ENTERO          shift and go to state 7
    REAL            shift and go to state 1
    BOOL            shift and go to state 13
    CAR             shift and go to state 2

    type_specifier                 shift and go to state 3
    libreria                       shift and go to state 10
    var_declaracion                shift and go to state 4
    fun_declaracion                shift and go to state 12
    program                        shift and go to state 5
    declaracion_list               shift and go to state 6
    declaracion                    shift and go to state 14

state 1

    (13) type_specifier -> REAL .

    ID              reduce using rule 13 (type_specifier -> REAL .)


state 2

    (15) type_specifier -> CAR .

    ID              reduce using rule 15 (type_specifier -> CAR .)


state 3

    (8) var_declaracion -> type_specifier . ID PUNTOCOMA
    (9) var_declaracion -> type_specifier . ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA
    (10) var_declaracion -> type_specifier . ID IGUAL expression PUNTOCOMA

    ID              shift and go to state 15


state 4

    (4) declaracion -> var_declaracion .

    ID              reduce using rule 4 (declaracion -> var_declaracion .)
    FUNCION         reduce using rule 4 (declaracion -> var_declaracion .)
    IMPORTAME       reduce using rule 4 (declaracion -> var_declaracion .)
    ENTERO          reduce using rule 4 (declaracion -> var_declaracion .)
    REAL            reduce using rule 4 (declaracion -> var_declaracion .)
    BOOL            reduce using rule 4 (declaracion -> var_declaracion .)
    CAR             reduce using rule 4 (declaracion -> var_declaracion .)
    $end            reduce using rule 4 (declaracion -> var_declaracion .)


state 5

    (0) S' -> program .



state 6

    (1) program -> declaracion_list .
    (2) declaracion_list -> declaracion_list . declaracion
    (4) declaracion -> . var_declaracion
    (5) declaracion -> . fun_declaracion
    (6) declaracion -> . libreria
    (8) var_declaracion -> . type_specifier ID PUNTOCOMA
    (9) var_declaracion -> . type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA
    (10) var_declaracion -> . type_specifier ID IGUAL expression PUNTOCOMA
    (11) var_declaracion -> . ID IGUAL expression PUNTOCOMA
    (16) fun_declaracion -> . FUNCION ID LPAREN params RPAREN compount_stmt
    (7) libreria -> . IMPORTAME CADENA PUNTOCOMA
    (12) type_specifier -> . ENTERO
    (13) type_specifier -> . REAL
    (14) type_specifier -> . BOOL
    (15) type_specifier -> . CAR

    $end            reduce using rule 1 (program -> declaracion_list .)
    ID              shift and go to state 8
    FUNCION         shift and go to state 9
    IMPORTAME       shift and go to state 11
    ENTERO          shift and go to state 7
    REAL            shift and go to state 1
    BOOL            shift and go to state 13
    CAR             shift and go to state 2

    type_specifier                 shift and go to state 3
    libreria                       shift and go to state 10
    var_declaracion                shift and go to state 4
    fun_declaracion                shift and go to state 12
    declaracion                    shift and go to state 16

state 7

    (12) type_specifier -> ENTERO .

    ID              reduce using rule 12 (type_specifier -> ENTERO .)


state 8

    (11) var_declaracion -> ID . IGUAL expression PUNTOCOMA

    IGUAL           shift and go to state 17


state 9

    (16) fun_declaracion -> FUNCION . ID LPAREN params RPAREN compount_stmt

    ID              shift and go to state 18


state 10

    (6) declaracion -> libreria .

    ID              reduce using rule 6 (declaracion -> libreria .)
    FUNCION         reduce using rule 6 (declaracion -> libreria .)
    IMPORTAME       reduce using rule 6 (declaracion -> libreria .)
    ENTERO          reduce using rule 6 (declaracion -> libreria .)
    REAL            reduce using rule 6 (declaracion -> libreria .)
    BOOL            reduce using rule 6 (declaracion -> libreria .)
    CAR             reduce using rule 6 (declaracion -> libreria .)
    $end            reduce using rule 6 (declaracion -> libreria .)


state 11

    (7) libreria -> IMPORTAME . CADENA PUNTOCOMA

    CADENA          shift and go to state 19


state 12

    (5) declaracion -> fun_declaracion .

    ID              reduce using rule 5 (declaracion -> fun_declaracion .)
    FUNCION         reduce using rule 5 (declaracion -> fun_declaracion .)
    IMPORTAME       reduce using rule 5 (declaracion -> fun_declaracion .)
    ENTERO          reduce using rule 5 (declaracion -> fun_declaracion .)
    REAL            reduce using rule 5 (declaracion -> fun_declaracion .)
    BOOL            reduce using rule 5 (declaracion -> fun_declaracion .)
    CAR             reduce using rule 5 (declaracion -> fun_declaracion .)
    $end            reduce using rule 5 (declaracion -> fun_declaracion .)


state 13

    (14) type_specifier -> BOOL .

    ID              reduce using rule 14 (type_specifier -> BOOL .)


state 14

    (3) declaracion_list -> declaracion .

    ID              reduce using rule 3 (declaracion_list -> declaracion .)
    FUNCION         reduce using rule 3 (declaracion_list -> declaracion .)
    IMPORTAME       reduce using rule 3 (declaracion_list -> declaracion .)
    ENTERO          reduce using rule 3 (declaracion_list -> declaracion .)
    REAL            reduce using rule 3 (declaracion_list -> declaracion .)
    BOOL            reduce using rule 3 (declaracion_list -> declaracion .)
    CAR             reduce using rule 3 (declaracion_list -> declaracion .)
    $end            reduce using rule 3 (declaracion_list -> declaracion .)


state 15

    (8) var_declaracion -> type_specifier ID . PUNTOCOMA
    (9) var_declaracion -> type_specifier ID . LCORCHETE NUMERO RCORCHETE PUNTOCOMA
    (10) var_declaracion -> type_specifier ID . IGUAL expression PUNTOCOMA

    PUNTOCOMA       shift and go to state 20
    LCORCHETE       shift and go to state 22
    IGUAL           shift and go to state 21


state 16

    (2) declaracion_list -> declaracion_list declaracion .

    ID              reduce using rule 2 (declaracion_list -> declaracion_list declaracion .)
    FUNCION         reduce using rule 2 (declaracion_list -> declaracion_list declaracion .)
    IMPORTAME       reduce using rule 2 (declaracion_list -> declaracion_list declaracion .)
    ENTERO          reduce using rule 2 (declaracion_list -> declaracion_list declaracion .)
    REAL            reduce using rule 2 (declaracion_list -> declaracion_list declaracion .)
    BOOL            reduce using rule 2 (declaracion_list -> declaracion_list declaracion .)
    CAR             reduce using rule 2 (declaracion_list -> declaracion_list declaracion .)
    $end            reduce using rule 2 (declaracion_list -> declaracion_list declaracion .)


state 17

    (11) var_declaracion -> ID IGUAL . expression PUNTOCOMA
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 36
    additive_expression            shift and go to state 25

state 18

    (16) fun_declaracion -> FUNCION ID . LPAREN params RPAREN compount_stmt

    LPAREN          shift and go to state 37


state 19

    (7) libreria -> IMPORTAME CADENA . PUNTOCOMA

    PUNTOCOMA       shift and go to state 38


state 20

    (8) var_declaracion -> type_specifier ID PUNTOCOMA .

    ID              reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    FUNCION         reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    IMPORTAME       reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    ENTERO          reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    REAL            reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    BOOL            reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    CAR             reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    $end            reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    RLLAVE          reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    LLLAVE          reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    SI              reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    MIENTRAS        reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    REGRESA         reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    PARA            reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    LPAREN          reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    NUMERO          reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    CADENA          reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    FLOTANTE        reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)
    NULO            reduce using rule 8 (var_declaracion -> type_specifier ID PUNTOCOMA .)


state 21

    (10) var_declaracion -> type_specifier ID IGUAL . expression PUNTOCOMA
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 39
    additive_expression            shift and go to state 25

state 22

    (9) var_declaracion -> type_specifier ID LCORCHETE . NUMERO RCORCHETE PUNTOCOMA

    NUMERO          shift and go to state 40


state 23

    (78) factor -> NULO .

    PRODUCTO        reduce using rule 78 (factor -> NULO .)
    DIVISION        reduce using rule 78 (factor -> NULO .)
    MENOR           reduce using rule 78 (factor -> NULO .)
    MENORIGUAL      reduce using rule 78 (factor -> NULO .)
    MAYOR           reduce using rule 78 (factor -> NULO .)
    MAYORIGUAL      reduce using rule 78 (factor -> NULO .)
    IGUALDAD        reduce using rule 78 (factor -> NULO .)
    NEGACION        reduce using rule 78 (factor -> NULO .)
    DIFERENTE       reduce using rule 78 (factor -> NULO .)
    SUMA            reduce using rule 78 (factor -> NULO .)
    RESTA           reduce using rule 78 (factor -> NULO .)
    AND             reduce using rule 78 (factor -> NULO .)
    OR              reduce using rule 78 (factor -> NULO .)
    XOR             reduce using rule 78 (factor -> NULO .)
    NOT             reduce using rule 78 (factor -> NULO .)
    PUNTOCOMA       reduce using rule 78 (factor -> NULO .)
    RPAREN          reduce using rule 78 (factor -> NULO .)
    COMA            reduce using rule 78 (factor -> NULO .)
    RCORCHETE       reduce using rule 78 (factor -> NULO .)


state 24

    (49) comp_expression -> simple_expression . compop simple_expression
    (50) comp_expression -> simple_expression .
    (51) compop -> . AND
    (52) compop -> . OR
    (53) compop -> . XOR
    (54) compop -> . NOT

    PUNTOCOMA       reduce using rule 50 (comp_expression -> simple_expression .)
    RPAREN          reduce using rule 50 (comp_expression -> simple_expression .)
    COMA            reduce using rule 50 (comp_expression -> simple_expression .)
    RCORCHETE       reduce using rule 50 (comp_expression -> simple_expression .)
    AND             shift and go to state 41
    OR              shift and go to state 45
    XOR             shift and go to state 42
    NOT             shift and go to state 44

    compop                         shift and go to state 43

state 25

    (55) simple_expression -> additive_expression . relop additive_expression
    (56) simple_expression -> additive_expression .
    (64) additive_expression -> additive_expression . addop term
    (57) relop -> . MENOR
    (58) relop -> . MENORIGUAL
    (59) relop -> . MAYOR
    (60) relop -> . MAYORIGUAL
    (61) relop -> . IGUALDAD
    (62) relop -> . NEGACION
    (63) relop -> . DIFERENTE
    (66) addop -> . SUMA
    (67) addop -> . RESTA

    AND             reduce using rule 56 (simple_expression -> additive_expression .)
    OR              reduce using rule 56 (simple_expression -> additive_expression .)
    XOR             reduce using rule 56 (simple_expression -> additive_expression .)
    NOT             reduce using rule 56 (simple_expression -> additive_expression .)
    PUNTOCOMA       reduce using rule 56 (simple_expression -> additive_expression .)
    COMA            reduce using rule 56 (simple_expression -> additive_expression .)
    RPAREN          reduce using rule 56 (simple_expression -> additive_expression .)
    RCORCHETE       reduce using rule 56 (simple_expression -> additive_expression .)
    MENOR           shift and go to state 51
    MENORIGUAL      shift and go to state 54
    MAYOR           shift and go to state 56
    MAYORIGUAL      shift and go to state 53
    IGUALDAD        shift and go to state 49
    NEGACION        shift and go to state 47
    DIFERENTE       shift and go to state 50
    SUMA            shift and go to state 52
    RESTA           shift and go to state 55

    addop                          shift and go to state 46
    relop                          shift and go to state 48

state 26

    (76) factor -> CADENA .

    PRODUCTO        reduce using rule 76 (factor -> CADENA .)
    DIVISION        reduce using rule 76 (factor -> CADENA .)
    MENOR           reduce using rule 76 (factor -> CADENA .)
    MENORIGUAL      reduce using rule 76 (factor -> CADENA .)
    MAYOR           reduce using rule 76 (factor -> CADENA .)
    MAYORIGUAL      reduce using rule 76 (factor -> CADENA .)
    IGUALDAD        reduce using rule 76 (factor -> CADENA .)
    NEGACION        reduce using rule 76 (factor -> CADENA .)
    DIFERENTE       reduce using rule 76 (factor -> CADENA .)
    SUMA            reduce using rule 76 (factor -> CADENA .)
    RESTA           reduce using rule 76 (factor -> CADENA .)
    AND             reduce using rule 76 (factor -> CADENA .)
    OR              reduce using rule 76 (factor -> CADENA .)
    XOR             reduce using rule 76 (factor -> CADENA .)
    NOT             reduce using rule 76 (factor -> CADENA .)
    PUNTOCOMA       reduce using rule 76 (factor -> CADENA .)
    RPAREN          reduce using rule 76 (factor -> CADENA .)
    COMA            reduce using rule 76 (factor -> CADENA .)
    RCORCHETE       reduce using rule 76 (factor -> CADENA .)


state 27

    (74) factor -> call .

    PRODUCTO        reduce using rule 74 (factor -> call .)
    DIVISION        reduce using rule 74 (factor -> call .)
    MENOR           reduce using rule 74 (factor -> call .)
    MENORIGUAL      reduce using rule 74 (factor -> call .)
    MAYOR           reduce using rule 74 (factor -> call .)
    MAYORIGUAL      reduce using rule 74 (factor -> call .)
    IGUALDAD        reduce using rule 74 (factor -> call .)
    NEGACION        reduce using rule 74 (factor -> call .)
    DIFERENTE       reduce using rule 74 (factor -> call .)
    SUMA            reduce using rule 74 (factor -> call .)
    RESTA           reduce using rule 74 (factor -> call .)
    AND             reduce using rule 74 (factor -> call .)
    OR              reduce using rule 74 (factor -> call .)
    XOR             reduce using rule 74 (factor -> call .)
    NOT             reduce using rule 74 (factor -> call .)
    PUNTOCOMA       reduce using rule 74 (factor -> call .)
    RPAREN          reduce using rule 74 (factor -> call .)
    COMA            reduce using rule 74 (factor -> call .)
    RCORCHETE       reduce using rule 74 (factor -> call .)


state 28

    (69) term -> factor .

    PRODUCTO        reduce using rule 69 (term -> factor .)
    DIVISION        reduce using rule 69 (term -> factor .)
    MENOR           reduce using rule 69 (term -> factor .)
    MENORIGUAL      reduce using rule 69 (term -> factor .)
    MAYOR           reduce using rule 69 (term -> factor .)
    MAYORIGUAL      reduce using rule 69 (term -> factor .)
    IGUALDAD        reduce using rule 69 (term -> factor .)
    NEGACION        reduce using rule 69 (term -> factor .)
    DIFERENTE       reduce using rule 69 (term -> factor .)
    SUMA            reduce using rule 69 (term -> factor .)
    RESTA           reduce using rule 69 (term -> factor .)
    AND             reduce using rule 69 (term -> factor .)
    OR              reduce using rule 69 (term -> factor .)
    XOR             reduce using rule 69 (term -> factor .)
    NOT             reduce using rule 69 (term -> factor .)
    COMA            reduce using rule 69 (term -> factor .)
    RPAREN          reduce using rule 69 (term -> factor .)
    PUNTOCOMA       reduce using rule 69 (term -> factor .)
    RCORCHETE       reduce using rule 69 (term -> factor .)


state 29

    (45) expression -> var . IGUAL expression
    (73) factor -> var .

    IGUAL           shift and go to state 57
    PRODUCTO        reduce using rule 73 (factor -> var .)
    DIVISION        reduce using rule 73 (factor -> var .)
    MENOR           reduce using rule 73 (factor -> var .)
    MENORIGUAL      reduce using rule 73 (factor -> var .)
    MAYOR           reduce using rule 73 (factor -> var .)
    MAYORIGUAL      reduce using rule 73 (factor -> var .)
    IGUALDAD        reduce using rule 73 (factor -> var .)
    NEGACION        reduce using rule 73 (factor -> var .)
    DIFERENTE       reduce using rule 73 (factor -> var .)
    SUMA            reduce using rule 73 (factor -> var .)
    RESTA           reduce using rule 73 (factor -> var .)
    AND             reduce using rule 73 (factor -> var .)
    OR              reduce using rule 73 (factor -> var .)
    XOR             reduce using rule 73 (factor -> var .)
    NOT             reduce using rule 73 (factor -> var .)
    PUNTOCOMA       reduce using rule 73 (factor -> var .)
    RPAREN          reduce using rule 73 (factor -> var .)
    COMA            reduce using rule 73 (factor -> var .)
    RCORCHETE       reduce using rule 73 (factor -> var .)


state 30

    (46) expression -> comp_expression .

    RPAREN          reduce using rule 46 (expression -> comp_expression .)
    COMA            reduce using rule 46 (expression -> comp_expression .)
    PUNTOCOMA       reduce using rule 46 (expression -> comp_expression .)
    RCORCHETE       reduce using rule 46 (expression -> comp_expression .)


state 31

    (75) factor -> NUMERO .

    PRODUCTO        reduce using rule 75 (factor -> NUMERO .)
    DIVISION        reduce using rule 75 (factor -> NUMERO .)
    MENOR           reduce using rule 75 (factor -> NUMERO .)
    MENORIGUAL      reduce using rule 75 (factor -> NUMERO .)
    MAYOR           reduce using rule 75 (factor -> NUMERO .)
    MAYORIGUAL      reduce using rule 75 (factor -> NUMERO .)
    IGUALDAD        reduce using rule 75 (factor -> NUMERO .)
    NEGACION        reduce using rule 75 (factor -> NUMERO .)
    DIFERENTE       reduce using rule 75 (factor -> NUMERO .)
    SUMA            reduce using rule 75 (factor -> NUMERO .)
    RESTA           reduce using rule 75 (factor -> NUMERO .)
    AND             reduce using rule 75 (factor -> NUMERO .)
    OR              reduce using rule 75 (factor -> NUMERO .)
    XOR             reduce using rule 75 (factor -> NUMERO .)
    NOT             reduce using rule 75 (factor -> NUMERO .)
    PUNTOCOMA       reduce using rule 75 (factor -> NUMERO .)
    RPAREN          reduce using rule 75 (factor -> NUMERO .)
    COMA            reduce using rule 75 (factor -> NUMERO .)
    RCORCHETE       reduce using rule 75 (factor -> NUMERO .)


state 32

    (72) factor -> LPAREN . expression RPAREN
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 58
    additive_expression            shift and go to state 25

state 33

    (47) var -> ID .
    (48) var -> ID . LCORCHETE expression RCORCHETE
    (79) call -> ID . LPAREN args RPAREN

    IGUAL           reduce using rule 47 (var -> ID .)
    PRODUCTO        reduce using rule 47 (var -> ID .)
    DIVISION        reduce using rule 47 (var -> ID .)
    MENOR           reduce using rule 47 (var -> ID .)
    MENORIGUAL      reduce using rule 47 (var -> ID .)
    MAYOR           reduce using rule 47 (var -> ID .)
    MAYORIGUAL      reduce using rule 47 (var -> ID .)
    IGUALDAD        reduce using rule 47 (var -> ID .)
    NEGACION        reduce using rule 47 (var -> ID .)
    DIFERENTE       reduce using rule 47 (var -> ID .)
    SUMA            reduce using rule 47 (var -> ID .)
    RESTA           reduce using rule 47 (var -> ID .)
    AND             reduce using rule 47 (var -> ID .)
    OR              reduce using rule 47 (var -> ID .)
    XOR             reduce using rule 47 (var -> ID .)
    NOT             reduce using rule 47 (var -> ID .)
    PUNTOCOMA       reduce using rule 47 (var -> ID .)
    RPAREN          reduce using rule 47 (var -> ID .)
    COMA            reduce using rule 47 (var -> ID .)
    RCORCHETE       reduce using rule 47 (var -> ID .)
    LCORCHETE       shift and go to state 60
    LPAREN          shift and go to state 59


state 34

    (65) additive_expression -> term .
    (68) term -> term . mulop factor
    (70) mulop -> . PRODUCTO
    (71) mulop -> . DIVISION

    MENOR           reduce using rule 65 (additive_expression -> term .)
    MENORIGUAL      reduce using rule 65 (additive_expression -> term .)
    MAYOR           reduce using rule 65 (additive_expression -> term .)
    MAYORIGUAL      reduce using rule 65 (additive_expression -> term .)
    IGUALDAD        reduce using rule 65 (additive_expression -> term .)
    NEGACION        reduce using rule 65 (additive_expression -> term .)
    DIFERENTE       reduce using rule 65 (additive_expression -> term .)
    SUMA            reduce using rule 65 (additive_expression -> term .)
    RESTA           reduce using rule 65 (additive_expression -> term .)
    AND             reduce using rule 65 (additive_expression -> term .)
    OR              reduce using rule 65 (additive_expression -> term .)
    XOR             reduce using rule 65 (additive_expression -> term .)
    NOT             reduce using rule 65 (additive_expression -> term .)
    PUNTOCOMA       reduce using rule 65 (additive_expression -> term .)
    RPAREN          reduce using rule 65 (additive_expression -> term .)
    COMA            reduce using rule 65 (additive_expression -> term .)
    RCORCHETE       reduce using rule 65 (additive_expression -> term .)
    PRODUCTO        shift and go to state 61
    DIVISION        shift and go to state 62

    mulop                          shift and go to state 63

state 35

    (77) factor -> FLOTANTE .

    PRODUCTO        reduce using rule 77 (factor -> FLOTANTE .)
    DIVISION        reduce using rule 77 (factor -> FLOTANTE .)
    MENOR           reduce using rule 77 (factor -> FLOTANTE .)
    MENORIGUAL      reduce using rule 77 (factor -> FLOTANTE .)
    MAYOR           reduce using rule 77 (factor -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 77 (factor -> FLOTANTE .)
    IGUALDAD        reduce using rule 77 (factor -> FLOTANTE .)
    NEGACION        reduce using rule 77 (factor -> FLOTANTE .)
    DIFERENTE       reduce using rule 77 (factor -> FLOTANTE .)
    SUMA            reduce using rule 77 (factor -> FLOTANTE .)
    RESTA           reduce using rule 77 (factor -> FLOTANTE .)
    AND             reduce using rule 77 (factor -> FLOTANTE .)
    OR              reduce using rule 77 (factor -> FLOTANTE .)
    XOR             reduce using rule 77 (factor -> FLOTANTE .)
    NOT             reduce using rule 77 (factor -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 77 (factor -> FLOTANTE .)
    RPAREN          reduce using rule 77 (factor -> FLOTANTE .)
    COMA            reduce using rule 77 (factor -> FLOTANTE .)
    RCORCHETE       reduce using rule 77 (factor -> FLOTANTE .)


state 36

    (11) var_declaracion -> ID IGUAL expression . PUNTOCOMA

    PUNTOCOMA       shift and go to state 64


state 37

    (16) fun_declaracion -> FUNCION ID LPAREN . params RPAREN compount_stmt
    (17) params -> . param_list
    (18) params -> . empty
    (19) param_list -> . param_list COMA param
    (20) param_list -> . param
    (21) param_list -> . empty
    (84) empty -> .
    (22) param -> . type_specifier ID
    (23) param -> . type_specifier ID LCORCHETE RCORCHETE
    (12) type_specifier -> . ENTERO
    (13) type_specifier -> . REAL
    (14) type_specifier -> . BOOL
    (15) type_specifier -> . CAR

    RPAREN          reduce using rule 84 (empty -> .)
    COMA            reduce using rule 84 (empty -> .)
    ENTERO          shift and go to state 7
    REAL            shift and go to state 1
    BOOL            shift and go to state 13
    CAR             shift and go to state 2

    type_specifier                 shift and go to state 65
    param_list                     shift and go to state 66
    param                          shift and go to state 67
    params                         shift and go to state 68
    empty                          shift and go to state 69

state 38

    (7) libreria -> IMPORTAME CADENA PUNTOCOMA .

    ID              reduce using rule 7 (libreria -> IMPORTAME CADENA PUNTOCOMA .)
    FUNCION         reduce using rule 7 (libreria -> IMPORTAME CADENA PUNTOCOMA .)
    IMPORTAME       reduce using rule 7 (libreria -> IMPORTAME CADENA PUNTOCOMA .)
    ENTERO          reduce using rule 7 (libreria -> IMPORTAME CADENA PUNTOCOMA .)
    REAL            reduce using rule 7 (libreria -> IMPORTAME CADENA PUNTOCOMA .)
    BOOL            reduce using rule 7 (libreria -> IMPORTAME CADENA PUNTOCOMA .)
    CAR             reduce using rule 7 (libreria -> IMPORTAME CADENA PUNTOCOMA .)
    $end            reduce using rule 7 (libreria -> IMPORTAME CADENA PUNTOCOMA .)


state 39

    (10) var_declaracion -> type_specifier ID IGUAL expression . PUNTOCOMA

    PUNTOCOMA       shift and go to state 70


state 40

    (9) var_declaracion -> type_specifier ID LCORCHETE NUMERO . RCORCHETE PUNTOCOMA

    RCORCHETE       shift and go to state 71


state 41

    (51) compop -> AND .

    LPAREN          reduce using rule 51 (compop -> AND .)
    NUMERO          reduce using rule 51 (compop -> AND .)
    CADENA          reduce using rule 51 (compop -> AND .)
    FLOTANTE        reduce using rule 51 (compop -> AND .)
    NULO            reduce using rule 51 (compop -> AND .)
    ID              reduce using rule 51 (compop -> AND .)


state 42

    (53) compop -> XOR .

    LPAREN          reduce using rule 53 (compop -> XOR .)
    NUMERO          reduce using rule 53 (compop -> XOR .)
    CADENA          reduce using rule 53 (compop -> XOR .)
    FLOTANTE        reduce using rule 53 (compop -> XOR .)
    NULO            reduce using rule 53 (compop -> XOR .)
    ID              reduce using rule 53 (compop -> XOR .)


state 43

    (49) comp_expression -> simple_expression compop . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (79) call -> . ID LPAREN args RPAREN

    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23
    ID              shift and go to state 33

    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 72
    simple_expression              shift and go to state 73
    additive_expression            shift and go to state 25

state 44

    (54) compop -> NOT .

    LPAREN          reduce using rule 54 (compop -> NOT .)
    NUMERO          reduce using rule 54 (compop -> NOT .)
    CADENA          reduce using rule 54 (compop -> NOT .)
    FLOTANTE        reduce using rule 54 (compop -> NOT .)
    NULO            reduce using rule 54 (compop -> NOT .)
    ID              reduce using rule 54 (compop -> NOT .)


state 45

    (52) compop -> OR .

    LPAREN          reduce using rule 52 (compop -> OR .)
    NUMERO          reduce using rule 52 (compop -> OR .)
    CADENA          reduce using rule 52 (compop -> OR .)
    FLOTANTE        reduce using rule 52 (compop -> OR .)
    NULO            reduce using rule 52 (compop -> OR .)
    ID              reduce using rule 52 (compop -> OR .)


state 46

    (64) additive_expression -> additive_expression addop . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (79) call -> . ID LPAREN args RPAREN

    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23
    ID              shift and go to state 33

    term                           shift and go to state 74
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 72

state 47

    (62) relop -> NEGACION .

    LPAREN          reduce using rule 62 (relop -> NEGACION .)
    NUMERO          reduce using rule 62 (relop -> NEGACION .)
    CADENA          reduce using rule 62 (relop -> NEGACION .)
    FLOTANTE        reduce using rule 62 (relop -> NEGACION .)
    NULO            reduce using rule 62 (relop -> NEGACION .)
    ID              reduce using rule 62 (relop -> NEGACION .)


state 48

    (55) simple_expression -> additive_expression relop . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (79) call -> . ID LPAREN args RPAREN

    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23
    ID              shift and go to state 33

    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 72
    additive_expression            shift and go to state 75

state 49

    (61) relop -> IGUALDAD .

    LPAREN          reduce using rule 61 (relop -> IGUALDAD .)
    NUMERO          reduce using rule 61 (relop -> IGUALDAD .)
    CADENA          reduce using rule 61 (relop -> IGUALDAD .)
    FLOTANTE        reduce using rule 61 (relop -> IGUALDAD .)
    NULO            reduce using rule 61 (relop -> IGUALDAD .)
    ID              reduce using rule 61 (relop -> IGUALDAD .)


state 50

    (63) relop -> DIFERENTE .

    LPAREN          reduce using rule 63 (relop -> DIFERENTE .)
    NUMERO          reduce using rule 63 (relop -> DIFERENTE .)
    CADENA          reduce using rule 63 (relop -> DIFERENTE .)
    FLOTANTE        reduce using rule 63 (relop -> DIFERENTE .)
    NULO            reduce using rule 63 (relop -> DIFERENTE .)
    ID              reduce using rule 63 (relop -> DIFERENTE .)


state 51

    (57) relop -> MENOR .

    LPAREN          reduce using rule 57 (relop -> MENOR .)
    NUMERO          reduce using rule 57 (relop -> MENOR .)
    CADENA          reduce using rule 57 (relop -> MENOR .)
    FLOTANTE        reduce using rule 57 (relop -> MENOR .)
    NULO            reduce using rule 57 (relop -> MENOR .)
    ID              reduce using rule 57 (relop -> MENOR .)


state 52

    (66) addop -> SUMA .

    LPAREN          reduce using rule 66 (addop -> SUMA .)
    NUMERO          reduce using rule 66 (addop -> SUMA .)
    CADENA          reduce using rule 66 (addop -> SUMA .)
    FLOTANTE        reduce using rule 66 (addop -> SUMA .)
    NULO            reduce using rule 66 (addop -> SUMA .)
    ID              reduce using rule 66 (addop -> SUMA .)


state 53

    (60) relop -> MAYORIGUAL .

    LPAREN          reduce using rule 60 (relop -> MAYORIGUAL .)
    NUMERO          reduce using rule 60 (relop -> MAYORIGUAL .)
    CADENA          reduce using rule 60 (relop -> MAYORIGUAL .)
    FLOTANTE        reduce using rule 60 (relop -> MAYORIGUAL .)
    NULO            reduce using rule 60 (relop -> MAYORIGUAL .)
    ID              reduce using rule 60 (relop -> MAYORIGUAL .)


state 54

    (58) relop -> MENORIGUAL .

    LPAREN          reduce using rule 58 (relop -> MENORIGUAL .)
    NUMERO          reduce using rule 58 (relop -> MENORIGUAL .)
    CADENA          reduce using rule 58 (relop -> MENORIGUAL .)
    FLOTANTE        reduce using rule 58 (relop -> MENORIGUAL .)
    NULO            reduce using rule 58 (relop -> MENORIGUAL .)
    ID              reduce using rule 58 (relop -> MENORIGUAL .)


state 55

    (67) addop -> RESTA .

    LPAREN          reduce using rule 67 (addop -> RESTA .)
    NUMERO          reduce using rule 67 (addop -> RESTA .)
    CADENA          reduce using rule 67 (addop -> RESTA .)
    FLOTANTE        reduce using rule 67 (addop -> RESTA .)
    NULO            reduce using rule 67 (addop -> RESTA .)
    ID              reduce using rule 67 (addop -> RESTA .)


state 56

    (59) relop -> MAYOR .

    LPAREN          reduce using rule 59 (relop -> MAYOR .)
    NUMERO          reduce using rule 59 (relop -> MAYOR .)
    CADENA          reduce using rule 59 (relop -> MAYOR .)
    FLOTANTE        reduce using rule 59 (relop -> MAYOR .)
    NULO            reduce using rule 59 (relop -> MAYOR .)
    ID              reduce using rule 59 (relop -> MAYOR .)


state 57

    (45) expression -> var IGUAL . expression
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 76
    additive_expression            shift and go to state 25

state 58

    (72) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 77


state 59

    (79) call -> ID LPAREN . args RPAREN
    (80) args -> . args_list
    (81) args -> . empty
    (82) args_list -> . args_list COMA expression
    (83) args_list -> . expression
    (84) empty -> .
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    RPAREN          reduce using rule 84 (empty -> .)
    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    args                           shift and go to state 79
    args_list                      shift and go to state 80
    call                           shift and go to state 27
    additive_expression            shift and go to state 25
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 81
    empty                          shift and go to state 78

state 60

    (48) var -> ID LCORCHETE . expression RCORCHETE
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 82
    additive_expression            shift and go to state 25

state 61

    (70) mulop -> PRODUCTO .

    LPAREN          reduce using rule 70 (mulop -> PRODUCTO .)
    NUMERO          reduce using rule 70 (mulop -> PRODUCTO .)
    CADENA          reduce using rule 70 (mulop -> PRODUCTO .)
    FLOTANTE        reduce using rule 70 (mulop -> PRODUCTO .)
    NULO            reduce using rule 70 (mulop -> PRODUCTO .)
    ID              reduce using rule 70 (mulop -> PRODUCTO .)


state 62

    (71) mulop -> DIVISION .

    LPAREN          reduce using rule 71 (mulop -> DIVISION .)
    NUMERO          reduce using rule 71 (mulop -> DIVISION .)
    CADENA          reduce using rule 71 (mulop -> DIVISION .)
    FLOTANTE        reduce using rule 71 (mulop -> DIVISION .)
    NULO            reduce using rule 71 (mulop -> DIVISION .)
    ID              reduce using rule 71 (mulop -> DIVISION .)


state 63

    (68) term -> term mulop . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (79) call -> . ID LPAREN args RPAREN

    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23
    ID              shift and go to state 33

    call                           shift and go to state 27
    factor                         shift and go to state 83
    var                            shift and go to state 72

state 64

    (11) var_declaracion -> ID IGUAL expression PUNTOCOMA .

    ID              reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    FUNCION         reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    IMPORTAME       reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    ENTERO          reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    REAL            reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    BOOL            reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    CAR             reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    $end            reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    RLLAVE          reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    LLLAVE          reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    SI              reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    MIENTRAS        reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    REGRESA         reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    PARA            reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    LPAREN          reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    NUMERO          reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    CADENA          reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    FLOTANTE        reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)
    NULO            reduce using rule 11 (var_declaracion -> ID IGUAL expression PUNTOCOMA .)


state 65

    (22) param -> type_specifier . ID
    (23) param -> type_specifier . ID LCORCHETE RCORCHETE

    ID              shift and go to state 84


state 66

    (17) params -> param_list .
    (19) param_list -> param_list . COMA param

    RPAREN          reduce using rule 17 (params -> param_list .)
    COMA            shift and go to state 85


state 67

    (20) param_list -> param .

    COMA            reduce using rule 20 (param_list -> param .)
    RPAREN          reduce using rule 20 (param_list -> param .)


state 68

    (16) fun_declaracion -> FUNCION ID LPAREN params . RPAREN compount_stmt

    RPAREN          shift and go to state 86


state 69

    (18) params -> empty .
    (21) param_list -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 18 (params -> empty .)
    RPAREN          reduce using rule 18 (params -> empty .)
    COMA            reduce using rule 21 (param_list -> empty .)

  ! RPAREN          [ reduce using rule 21 (param_list -> empty .) ]


state 70

    (10) var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .

    ID              reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    FUNCION         reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    IMPORTAME       reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    ENTERO          reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    REAL            reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    BOOL            reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    CAR             reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    $end            reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    RLLAVE          reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    LLLAVE          reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    SI              reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    MIENTRAS        reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    REGRESA         reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    PARA            reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    LPAREN          reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    NUMERO          reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    CADENA          reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    FLOTANTE        reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)
    NULO            reduce using rule 10 (var_declaracion -> type_specifier ID IGUAL expression PUNTOCOMA .)


state 71

    (9) var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 87


state 72

    (73) factor -> var .

    PRODUCTO        reduce using rule 73 (factor -> var .)
    DIVISION        reduce using rule 73 (factor -> var .)
    MENOR           reduce using rule 73 (factor -> var .)
    MENORIGUAL      reduce using rule 73 (factor -> var .)
    MAYOR           reduce using rule 73 (factor -> var .)
    MAYORIGUAL      reduce using rule 73 (factor -> var .)
    IGUALDAD        reduce using rule 73 (factor -> var .)
    NEGACION        reduce using rule 73 (factor -> var .)
    DIFERENTE       reduce using rule 73 (factor -> var .)
    SUMA            reduce using rule 73 (factor -> var .)
    RESTA           reduce using rule 73 (factor -> var .)
    AND             reduce using rule 73 (factor -> var .)
    OR              reduce using rule 73 (factor -> var .)
    XOR             reduce using rule 73 (factor -> var .)
    NOT             reduce using rule 73 (factor -> var .)
    PUNTOCOMA       reduce using rule 73 (factor -> var .)
    RPAREN          reduce using rule 73 (factor -> var .)
    COMA            reduce using rule 73 (factor -> var .)
    RCORCHETE       reduce using rule 73 (factor -> var .)


state 73

    (49) comp_expression -> simple_expression compop simple_expression .

    PUNTOCOMA       reduce using rule 49 (comp_expression -> simple_expression compop simple_expression .)
    RPAREN          reduce using rule 49 (comp_expression -> simple_expression compop simple_expression .)
    COMA            reduce using rule 49 (comp_expression -> simple_expression compop simple_expression .)
    RCORCHETE       reduce using rule 49 (comp_expression -> simple_expression compop simple_expression .)


state 74

    (64) additive_expression -> additive_expression addop term .
    (68) term -> term . mulop factor
    (70) mulop -> . PRODUCTO
    (71) mulop -> . DIVISION

    MENOR           reduce using rule 64 (additive_expression -> additive_expression addop term .)
    MENORIGUAL      reduce using rule 64 (additive_expression -> additive_expression addop term .)
    MAYOR           reduce using rule 64 (additive_expression -> additive_expression addop term .)
    MAYORIGUAL      reduce using rule 64 (additive_expression -> additive_expression addop term .)
    IGUALDAD        reduce using rule 64 (additive_expression -> additive_expression addop term .)
    NEGACION        reduce using rule 64 (additive_expression -> additive_expression addop term .)
    DIFERENTE       reduce using rule 64 (additive_expression -> additive_expression addop term .)
    SUMA            reduce using rule 64 (additive_expression -> additive_expression addop term .)
    RESTA           reduce using rule 64 (additive_expression -> additive_expression addop term .)
    AND             reduce using rule 64 (additive_expression -> additive_expression addop term .)
    OR              reduce using rule 64 (additive_expression -> additive_expression addop term .)
    XOR             reduce using rule 64 (additive_expression -> additive_expression addop term .)
    NOT             reduce using rule 64 (additive_expression -> additive_expression addop term .)
    PUNTOCOMA       reduce using rule 64 (additive_expression -> additive_expression addop term .)
    RPAREN          reduce using rule 64 (additive_expression -> additive_expression addop term .)
    COMA            reduce using rule 64 (additive_expression -> additive_expression addop term .)
    RCORCHETE       reduce using rule 64 (additive_expression -> additive_expression addop term .)
    PRODUCTO        shift and go to state 61
    DIVISION        shift and go to state 62

    mulop                          shift and go to state 63

state 75

    (55) simple_expression -> additive_expression relop additive_expression .
    (64) additive_expression -> additive_expression . addop term
    (66) addop -> . SUMA
    (67) addop -> . RESTA

    AND             reduce using rule 55 (simple_expression -> additive_expression relop additive_expression .)
    OR              reduce using rule 55 (simple_expression -> additive_expression relop additive_expression .)
    XOR             reduce using rule 55 (simple_expression -> additive_expression relop additive_expression .)
    NOT             reduce using rule 55 (simple_expression -> additive_expression relop additive_expression .)
    PUNTOCOMA       reduce using rule 55 (simple_expression -> additive_expression relop additive_expression .)
    COMA            reduce using rule 55 (simple_expression -> additive_expression relop additive_expression .)
    RPAREN          reduce using rule 55 (simple_expression -> additive_expression relop additive_expression .)
    RCORCHETE       reduce using rule 55 (simple_expression -> additive_expression relop additive_expression .)
    SUMA            shift and go to state 52
    RESTA           shift and go to state 55

    addop                          shift and go to state 46

state 76

    (45) expression -> var IGUAL expression .

    RPAREN          reduce using rule 45 (expression -> var IGUAL expression .)
    COMA            reduce using rule 45 (expression -> var IGUAL expression .)
    PUNTOCOMA       reduce using rule 45 (expression -> var IGUAL expression .)
    RCORCHETE       reduce using rule 45 (expression -> var IGUAL expression .)


state 77

    (72) factor -> LPAREN expression RPAREN .

    PRODUCTO        reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    DIVISION        reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    MENOR           reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    MENORIGUAL      reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    MAYOR           reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    MAYORIGUAL      reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    IGUALDAD        reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    NEGACION        reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    DIFERENTE       reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    SUMA            reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    RESTA           reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    XOR             reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    NOT             reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    PUNTOCOMA       reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    COMA            reduce using rule 72 (factor -> LPAREN expression RPAREN .)
    RCORCHETE       reduce using rule 72 (factor -> LPAREN expression RPAREN .)


state 78

    (81) args -> empty .

    RPAREN          reduce using rule 81 (args -> empty .)


state 79

    (79) call -> ID LPAREN args . RPAREN

    RPAREN          shift and go to state 88


state 80

    (80) args -> args_list .
    (82) args_list -> args_list . COMA expression

    RPAREN          reduce using rule 80 (args -> args_list .)
    COMA            shift and go to state 89


state 81

    (83) args_list -> expression .

    COMA            reduce using rule 83 (args_list -> expression .)
    RPAREN          reduce using rule 83 (args_list -> expression .)


state 82

    (48) var -> ID LCORCHETE expression . RCORCHETE

    RCORCHETE       shift and go to state 90


state 83

    (68) term -> term mulop factor .

    PRODUCTO        reduce using rule 68 (term -> term mulop factor .)
    DIVISION        reduce using rule 68 (term -> term mulop factor .)
    MENOR           reduce using rule 68 (term -> term mulop factor .)
    MENORIGUAL      reduce using rule 68 (term -> term mulop factor .)
    MAYOR           reduce using rule 68 (term -> term mulop factor .)
    MAYORIGUAL      reduce using rule 68 (term -> term mulop factor .)
    IGUALDAD        reduce using rule 68 (term -> term mulop factor .)
    NEGACION        reduce using rule 68 (term -> term mulop factor .)
    DIFERENTE       reduce using rule 68 (term -> term mulop factor .)
    SUMA            reduce using rule 68 (term -> term mulop factor .)
    RESTA           reduce using rule 68 (term -> term mulop factor .)
    AND             reduce using rule 68 (term -> term mulop factor .)
    OR              reduce using rule 68 (term -> term mulop factor .)
    XOR             reduce using rule 68 (term -> term mulop factor .)
    NOT             reduce using rule 68 (term -> term mulop factor .)
    COMA            reduce using rule 68 (term -> term mulop factor .)
    RPAREN          reduce using rule 68 (term -> term mulop factor .)
    PUNTOCOMA       reduce using rule 68 (term -> term mulop factor .)
    RCORCHETE       reduce using rule 68 (term -> term mulop factor .)


state 84

    (22) param -> type_specifier ID .
    (23) param -> type_specifier ID . LCORCHETE RCORCHETE

    COMA            reduce using rule 22 (param -> type_specifier ID .)
    RPAREN          reduce using rule 22 (param -> type_specifier ID .)
    LCORCHETE       shift and go to state 91


state 85

    (19) param_list -> param_list COMA . param
    (22) param -> . type_specifier ID
    (23) param -> . type_specifier ID LCORCHETE RCORCHETE
    (12) type_specifier -> . ENTERO
    (13) type_specifier -> . REAL
    (14) type_specifier -> . BOOL
    (15) type_specifier -> . CAR

    ENTERO          shift and go to state 7
    REAL            shift and go to state 1
    BOOL            shift and go to state 13
    CAR             shift and go to state 2

    type_specifier                 shift and go to state 65
    param                          shift and go to state 92

state 86

    (16) fun_declaracion -> FUNCION ID LPAREN params RPAREN . compount_stmt
    (24) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE

    LLLAVE          shift and go to state 93

    compount_stmt                  shift and go to state 94

state 87

    (9) var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .

    ID              reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    FUNCION         reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    IMPORTAME       reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    ENTERO          reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    REAL            reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    BOOL            reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    CAR             reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    $end            reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    RLLAVE          reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    LLLAVE          reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    SI              reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    MIENTRAS        reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    REGRESA         reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    PARA            reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    LPAREN          reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    NUMERO          reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    CADENA          reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    FLOTANTE        reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)
    NULO            reduce using rule 9 (var_declaracion -> type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA .)


state 88

    (79) call -> ID LPAREN args RPAREN .

    PRODUCTO        reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    DIVISION        reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    MENOR           reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    MENORIGUAL      reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    MAYOR           reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    MAYORIGUAL      reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    IGUALDAD        reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    NEGACION        reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    DIFERENTE       reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    SUMA            reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    RESTA           reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    AND             reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    OR              reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    XOR             reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    NOT             reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    RPAREN          reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    COMA            reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    PUNTOCOMA       reduce using rule 79 (call -> ID LPAREN args RPAREN .)
    RCORCHETE       reduce using rule 79 (call -> ID LPAREN args RPAREN .)


state 89

    (82) args_list -> args_list COMA . expression
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 95
    additive_expression            shift and go to state 25

state 90

    (48) var -> ID LCORCHETE expression RCORCHETE .

    IGUAL           reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    PRODUCTO        reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    DIVISION        reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    MENOR           reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    MENORIGUAL      reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    MAYOR           reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    MAYORIGUAL      reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    IGUALDAD        reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    NEGACION        reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    DIFERENTE       reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    SUMA            reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    RESTA           reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    AND             reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    OR              reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    XOR             reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    NOT             reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    PUNTOCOMA       reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    RPAREN          reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    COMA            reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)
    RCORCHETE       reduce using rule 48 (var -> ID LCORCHETE expression RCORCHETE .)


state 91

    (23) param -> type_specifier ID LCORCHETE . RCORCHETE

    RCORCHETE       shift and go to state 96


state 92

    (19) param_list -> param_list COMA param .

    COMA            reduce using rule 19 (param_list -> param_list COMA param .)
    RPAREN          reduce using rule 19 (param_list -> param_list COMA param .)


state 93

    (24) compount_stmt -> LLLAVE . local_declarations statement_list RLLAVE
    (25) local_declarations -> . local_declarations var_declaracion
    (26) local_declarations -> . empty
    (84) empty -> .

    ID              reduce using rule 84 (empty -> .)
    ENTERO          reduce using rule 84 (empty -> .)
    REAL            reduce using rule 84 (empty -> .)
    BOOL            reduce using rule 84 (empty -> .)
    CAR             reduce using rule 84 (empty -> .)
    RLLAVE          reduce using rule 84 (empty -> .)
    PUNTOCOMA       reduce using rule 84 (empty -> .)
    LLLAVE          reduce using rule 84 (empty -> .)
    SI              reduce using rule 84 (empty -> .)
    MIENTRAS        reduce using rule 84 (empty -> .)
    REGRESA         reduce using rule 84 (empty -> .)
    PARA            reduce using rule 84 (empty -> .)
    FUNCION         reduce using rule 84 (empty -> .)
    LPAREN          reduce using rule 84 (empty -> .)
    NUMERO          reduce using rule 84 (empty -> .)
    CADENA          reduce using rule 84 (empty -> .)
    FLOTANTE        reduce using rule 84 (empty -> .)
    NULO            reduce using rule 84 (empty -> .)

    local_declarations             shift and go to state 97
    empty                          shift and go to state 98

state 94

    (16) fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .

    RLLAVE          reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    PUNTOCOMA       reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    LLLAVE          reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    SI              reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    MIENTRAS        reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    REGRESA         reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    PARA            reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    FUNCION         reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    ID              reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    LPAREN          reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    NUMERO          reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    CADENA          reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    FLOTANTE        reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    NULO            reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    IMPORTAME       reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    ENTERO          reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    REAL            reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    BOOL            reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    CAR             reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    $end            reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    SINO            reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)
    DEPLANO         reduce using rule 16 (fun_declaracion -> FUNCION ID LPAREN params RPAREN compount_stmt .)


state 95

    (82) args_list -> args_list COMA expression .

    COMA            reduce using rule 82 (args_list -> args_list COMA expression .)
    RPAREN          reduce using rule 82 (args_list -> args_list COMA expression .)


state 96

    (23) param -> type_specifier ID LCORCHETE RCORCHETE .

    COMA            reduce using rule 23 (param -> type_specifier ID LCORCHETE RCORCHETE .)
    RPAREN          reduce using rule 23 (param -> type_specifier ID LCORCHETE RCORCHETE .)


state 97

    (24) compount_stmt -> LLLAVE local_declarations . statement_list RLLAVE
    (25) local_declarations -> local_declarations . var_declaracion
    (27) statement_list -> . statement_list statement
    (28) statement_list -> . empty
    (8) var_declaracion -> . type_specifier ID PUNTOCOMA
    (9) var_declaracion -> . type_specifier ID LCORCHETE NUMERO RCORCHETE PUNTOCOMA
    (10) var_declaracion -> . type_specifier ID IGUAL expression PUNTOCOMA
    (11) var_declaracion -> . ID IGUAL expression PUNTOCOMA
    (84) empty -> .
    (12) type_specifier -> . ENTERO
    (13) type_specifier -> . REAL
    (14) type_specifier -> . BOOL
    (15) type_specifier -> . CAR

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 8
    RLLAVE          reduce using rule 84 (empty -> .)
    PUNTOCOMA       reduce using rule 84 (empty -> .)
    LLLAVE          reduce using rule 84 (empty -> .)
    SI              reduce using rule 84 (empty -> .)
    MIENTRAS        reduce using rule 84 (empty -> .)
    REGRESA         reduce using rule 84 (empty -> .)
    PARA            reduce using rule 84 (empty -> .)
    FUNCION         reduce using rule 84 (empty -> .)
    LPAREN          reduce using rule 84 (empty -> .)
    NUMERO          reduce using rule 84 (empty -> .)
    CADENA          reduce using rule 84 (empty -> .)
    FLOTANTE        reduce using rule 84 (empty -> .)
    NULO            reduce using rule 84 (empty -> .)
    ENTERO          shift and go to state 7
    REAL            shift and go to state 1
    BOOL            shift and go to state 13
    CAR             shift and go to state 2

  ! ID              [ reduce using rule 84 (empty -> .) ]

    type_specifier                 shift and go to state 3
    var_declaracion                shift and go to state 99
    statement_list                 shift and go to state 100
    empty                          shift and go to state 101

state 98

    (26) local_declarations -> empty .

    ID              reduce using rule 26 (local_declarations -> empty .)
    ENTERO          reduce using rule 26 (local_declarations -> empty .)
    REAL            reduce using rule 26 (local_declarations -> empty .)
    BOOL            reduce using rule 26 (local_declarations -> empty .)
    CAR             reduce using rule 26 (local_declarations -> empty .)
    RLLAVE          reduce using rule 26 (local_declarations -> empty .)
    PUNTOCOMA       reduce using rule 26 (local_declarations -> empty .)
    LLLAVE          reduce using rule 26 (local_declarations -> empty .)
    SI              reduce using rule 26 (local_declarations -> empty .)
    MIENTRAS        reduce using rule 26 (local_declarations -> empty .)
    REGRESA         reduce using rule 26 (local_declarations -> empty .)
    PARA            reduce using rule 26 (local_declarations -> empty .)
    FUNCION         reduce using rule 26 (local_declarations -> empty .)
    LPAREN          reduce using rule 26 (local_declarations -> empty .)
    NUMERO          reduce using rule 26 (local_declarations -> empty .)
    CADENA          reduce using rule 26 (local_declarations -> empty .)
    FLOTANTE        reduce using rule 26 (local_declarations -> empty .)
    NULO            reduce using rule 26 (local_declarations -> empty .)


state 99

    (25) local_declarations -> local_declarations var_declaracion .

    ID              reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    ENTERO          reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    REAL            reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    BOOL            reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    CAR             reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    RLLAVE          reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    PUNTOCOMA       reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    LLLAVE          reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    SI              reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    MIENTRAS        reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    REGRESA         reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    PARA            reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    FUNCION         reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    LPAREN          reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    NUMERO          reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    CADENA          reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    FLOTANTE        reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)
    NULO            reduce using rule 25 (local_declarations -> local_declarations var_declaracion .)


state 100

    (24) compount_stmt -> LLLAVE local_declarations statement_list . RLLAVE
    (27) statement_list -> statement_list . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) statement -> . para_stmt
    (35) statement -> . fun_declaracion
    (36) expression_stmt -> . expression PUNTOCOMA
    (37) expression_stmt -> . PUNTOCOMA
    (24) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (38) selection_stmt -> . SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement
    (39) selection_stmt -> . SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement
    (40) selection_stmt -> . SI LPAREN expression RPAREN statement
    (41) iteration_stmt -> . MIENTRAS LPAREN expression RPAREN statement
    (43) return_stmt -> . REGRESA PUNTOCOMA
    (44) return_stmt -> . REGRESA expression PUNTOCOMA
    (42) para_stmt -> . PARA LPAREN expression COMA expression COMA expression RPAREN statement
    (16) fun_declaracion -> . FUNCION ID LPAREN params RPAREN compount_stmt
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    RLLAVE          shift and go to state 112
    PUNTOCOMA       shift and go to state 105
    LLLAVE          shift and go to state 93
    SI              shift and go to state 114
    MIENTRAS        shift and go to state 111
    REGRESA         shift and go to state 109
    PARA            shift and go to state 102
    FUNCION         shift and go to state 9
    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    return_stmt                    shift and go to state 103
    para_stmt                      shift and go to state 104
    simple_expression              shift and go to state 24
    additive_expression            shift and go to state 25
    call                           shift and go to state 27
    statement                      shift and go to state 107
    factor                         shift and go to state 28
    var                            shift and go to state 29
    expression_stmt                shift and go to state 106
    comp_expression                shift and go to state 30
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 108
    term                           shift and go to state 34
    fun_declaracion                shift and go to state 113
    iteration_stmt                 shift and go to state 115
    expression                     shift and go to state 116

state 101

    (28) statement_list -> empty .

    RLLAVE          reduce using rule 28 (statement_list -> empty .)
    PUNTOCOMA       reduce using rule 28 (statement_list -> empty .)
    LLLAVE          reduce using rule 28 (statement_list -> empty .)
    SI              reduce using rule 28 (statement_list -> empty .)
    MIENTRAS        reduce using rule 28 (statement_list -> empty .)
    REGRESA         reduce using rule 28 (statement_list -> empty .)
    PARA            reduce using rule 28 (statement_list -> empty .)
    FUNCION         reduce using rule 28 (statement_list -> empty .)
    ID              reduce using rule 28 (statement_list -> empty .)
    LPAREN          reduce using rule 28 (statement_list -> empty .)
    NUMERO          reduce using rule 28 (statement_list -> empty .)
    CADENA          reduce using rule 28 (statement_list -> empty .)
    FLOTANTE        reduce using rule 28 (statement_list -> empty .)
    NULO            reduce using rule 28 (statement_list -> empty .)


state 102

    (42) para_stmt -> PARA . LPAREN expression COMA expression COMA expression RPAREN statement

    LPAREN          shift and go to state 117


state 103

    (33) statement -> return_stmt .

    RLLAVE          reduce using rule 33 (statement -> return_stmt .)
    PUNTOCOMA       reduce using rule 33 (statement -> return_stmt .)
    LLLAVE          reduce using rule 33 (statement -> return_stmt .)
    SI              reduce using rule 33 (statement -> return_stmt .)
    MIENTRAS        reduce using rule 33 (statement -> return_stmt .)
    REGRESA         reduce using rule 33 (statement -> return_stmt .)
    PARA            reduce using rule 33 (statement -> return_stmt .)
    FUNCION         reduce using rule 33 (statement -> return_stmt .)
    ID              reduce using rule 33 (statement -> return_stmt .)
    LPAREN          reduce using rule 33 (statement -> return_stmt .)
    NUMERO          reduce using rule 33 (statement -> return_stmt .)
    CADENA          reduce using rule 33 (statement -> return_stmt .)
    FLOTANTE        reduce using rule 33 (statement -> return_stmt .)
    NULO            reduce using rule 33 (statement -> return_stmt .)
    SINO            reduce using rule 33 (statement -> return_stmt .)
    DEPLANO         reduce using rule 33 (statement -> return_stmt .)


state 104

    (34) statement -> para_stmt .

    RLLAVE          reduce using rule 34 (statement -> para_stmt .)
    PUNTOCOMA       reduce using rule 34 (statement -> para_stmt .)
    LLLAVE          reduce using rule 34 (statement -> para_stmt .)
    SI              reduce using rule 34 (statement -> para_stmt .)
    MIENTRAS        reduce using rule 34 (statement -> para_stmt .)
    REGRESA         reduce using rule 34 (statement -> para_stmt .)
    PARA            reduce using rule 34 (statement -> para_stmt .)
    FUNCION         reduce using rule 34 (statement -> para_stmt .)
    ID              reduce using rule 34 (statement -> para_stmt .)
    LPAREN          reduce using rule 34 (statement -> para_stmt .)
    NUMERO          reduce using rule 34 (statement -> para_stmt .)
    CADENA          reduce using rule 34 (statement -> para_stmt .)
    FLOTANTE        reduce using rule 34 (statement -> para_stmt .)
    NULO            reduce using rule 34 (statement -> para_stmt .)
    SINO            reduce using rule 34 (statement -> para_stmt .)
    DEPLANO         reduce using rule 34 (statement -> para_stmt .)


state 105

    (37) expression_stmt -> PUNTOCOMA .

    RLLAVE          reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    LLLAVE          reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    SI              reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    MIENTRAS        reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    REGRESA         reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    PARA            reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    FUNCION         reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    ID              reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    LPAREN          reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    NUMERO          reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    CADENA          reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    FLOTANTE        reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    NULO            reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    SINO            reduce using rule 37 (expression_stmt -> PUNTOCOMA .)
    DEPLANO         reduce using rule 37 (expression_stmt -> PUNTOCOMA .)


state 106

    (29) statement -> expression_stmt .

    RLLAVE          reduce using rule 29 (statement -> expression_stmt .)
    PUNTOCOMA       reduce using rule 29 (statement -> expression_stmt .)
    LLLAVE          reduce using rule 29 (statement -> expression_stmt .)
    SI              reduce using rule 29 (statement -> expression_stmt .)
    MIENTRAS        reduce using rule 29 (statement -> expression_stmt .)
    REGRESA         reduce using rule 29 (statement -> expression_stmt .)
    PARA            reduce using rule 29 (statement -> expression_stmt .)
    FUNCION         reduce using rule 29 (statement -> expression_stmt .)
    ID              reduce using rule 29 (statement -> expression_stmt .)
    LPAREN          reduce using rule 29 (statement -> expression_stmt .)
    NUMERO          reduce using rule 29 (statement -> expression_stmt .)
    CADENA          reduce using rule 29 (statement -> expression_stmt .)
    FLOTANTE        reduce using rule 29 (statement -> expression_stmt .)
    NULO            reduce using rule 29 (statement -> expression_stmt .)
    SINO            reduce using rule 29 (statement -> expression_stmt .)
    DEPLANO         reduce using rule 29 (statement -> expression_stmt .)


state 107

    (27) statement_list -> statement_list statement .

    RLLAVE          reduce using rule 27 (statement_list -> statement_list statement .)
    PUNTOCOMA       reduce using rule 27 (statement_list -> statement_list statement .)
    LLLAVE          reduce using rule 27 (statement_list -> statement_list statement .)
    SI              reduce using rule 27 (statement_list -> statement_list statement .)
    MIENTRAS        reduce using rule 27 (statement_list -> statement_list statement .)
    REGRESA         reduce using rule 27 (statement_list -> statement_list statement .)
    PARA            reduce using rule 27 (statement_list -> statement_list statement .)
    FUNCION         reduce using rule 27 (statement_list -> statement_list statement .)
    ID              reduce using rule 27 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 27 (statement_list -> statement_list statement .)
    NUMERO          reduce using rule 27 (statement_list -> statement_list statement .)
    CADENA          reduce using rule 27 (statement_list -> statement_list statement .)
    FLOTANTE        reduce using rule 27 (statement_list -> statement_list statement .)
    NULO            reduce using rule 27 (statement_list -> statement_list statement .)


state 108

    (31) statement -> selection_stmt .

    RLLAVE          reduce using rule 31 (statement -> selection_stmt .)
    PUNTOCOMA       reduce using rule 31 (statement -> selection_stmt .)
    LLLAVE          reduce using rule 31 (statement -> selection_stmt .)
    SI              reduce using rule 31 (statement -> selection_stmt .)
    MIENTRAS        reduce using rule 31 (statement -> selection_stmt .)
    REGRESA         reduce using rule 31 (statement -> selection_stmt .)
    PARA            reduce using rule 31 (statement -> selection_stmt .)
    FUNCION         reduce using rule 31 (statement -> selection_stmt .)
    ID              reduce using rule 31 (statement -> selection_stmt .)
    LPAREN          reduce using rule 31 (statement -> selection_stmt .)
    NUMERO          reduce using rule 31 (statement -> selection_stmt .)
    CADENA          reduce using rule 31 (statement -> selection_stmt .)
    FLOTANTE        reduce using rule 31 (statement -> selection_stmt .)
    NULO            reduce using rule 31 (statement -> selection_stmt .)
    SINO            reduce using rule 31 (statement -> selection_stmt .)
    DEPLANO         reduce using rule 31 (statement -> selection_stmt .)


state 109

    (43) return_stmt -> REGRESA . PUNTOCOMA
    (44) return_stmt -> REGRESA . expression PUNTOCOMA
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    PUNTOCOMA       shift and go to state 118
    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 119
    additive_expression            shift and go to state 25

state 110

    (30) statement -> compount_stmt .

    RLLAVE          reduce using rule 30 (statement -> compount_stmt .)
    PUNTOCOMA       reduce using rule 30 (statement -> compount_stmt .)
    LLLAVE          reduce using rule 30 (statement -> compount_stmt .)
    SI              reduce using rule 30 (statement -> compount_stmt .)
    MIENTRAS        reduce using rule 30 (statement -> compount_stmt .)
    REGRESA         reduce using rule 30 (statement -> compount_stmt .)
    PARA            reduce using rule 30 (statement -> compount_stmt .)
    FUNCION         reduce using rule 30 (statement -> compount_stmt .)
    ID              reduce using rule 30 (statement -> compount_stmt .)
    LPAREN          reduce using rule 30 (statement -> compount_stmt .)
    NUMERO          reduce using rule 30 (statement -> compount_stmt .)
    CADENA          reduce using rule 30 (statement -> compount_stmt .)
    FLOTANTE        reduce using rule 30 (statement -> compount_stmt .)
    NULO            reduce using rule 30 (statement -> compount_stmt .)
    SINO            reduce using rule 30 (statement -> compount_stmt .)
    DEPLANO         reduce using rule 30 (statement -> compount_stmt .)


state 111

    (41) iteration_stmt -> MIENTRAS . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 120


state 112

    (24) compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .

    RLLAVE          reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    PUNTOCOMA       reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    LLLAVE          reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    SI              reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    MIENTRAS        reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    REGRESA         reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    PARA            reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    FUNCION         reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    ID              reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    LPAREN          reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    NUMERO          reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    CADENA          reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    FLOTANTE        reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    NULO            reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    SINO            reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    DEPLANO         reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    IMPORTAME       reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    ENTERO          reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    REAL            reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    BOOL            reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    CAR             reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    $end            reduce using rule 24 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)


state 113

    (35) statement -> fun_declaracion .

    RLLAVE          reduce using rule 35 (statement -> fun_declaracion .)
    PUNTOCOMA       reduce using rule 35 (statement -> fun_declaracion .)
    LLLAVE          reduce using rule 35 (statement -> fun_declaracion .)
    SI              reduce using rule 35 (statement -> fun_declaracion .)
    MIENTRAS        reduce using rule 35 (statement -> fun_declaracion .)
    REGRESA         reduce using rule 35 (statement -> fun_declaracion .)
    PARA            reduce using rule 35 (statement -> fun_declaracion .)
    FUNCION         reduce using rule 35 (statement -> fun_declaracion .)
    ID              reduce using rule 35 (statement -> fun_declaracion .)
    LPAREN          reduce using rule 35 (statement -> fun_declaracion .)
    NUMERO          reduce using rule 35 (statement -> fun_declaracion .)
    CADENA          reduce using rule 35 (statement -> fun_declaracion .)
    FLOTANTE        reduce using rule 35 (statement -> fun_declaracion .)
    NULO            reduce using rule 35 (statement -> fun_declaracion .)
    SINO            reduce using rule 35 (statement -> fun_declaracion .)
    DEPLANO         reduce using rule 35 (statement -> fun_declaracion .)


state 114

    (38) selection_stmt -> SI . LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement
    (39) selection_stmt -> SI . LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement
    (40) selection_stmt -> SI . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 121


state 115

    (32) statement -> iteration_stmt .

    RLLAVE          reduce using rule 32 (statement -> iteration_stmt .)
    PUNTOCOMA       reduce using rule 32 (statement -> iteration_stmt .)
    LLLAVE          reduce using rule 32 (statement -> iteration_stmt .)
    SI              reduce using rule 32 (statement -> iteration_stmt .)
    MIENTRAS        reduce using rule 32 (statement -> iteration_stmt .)
    REGRESA         reduce using rule 32 (statement -> iteration_stmt .)
    PARA            reduce using rule 32 (statement -> iteration_stmt .)
    FUNCION         reduce using rule 32 (statement -> iteration_stmt .)
    ID              reduce using rule 32 (statement -> iteration_stmt .)
    LPAREN          reduce using rule 32 (statement -> iteration_stmt .)
    NUMERO          reduce using rule 32 (statement -> iteration_stmt .)
    CADENA          reduce using rule 32 (statement -> iteration_stmt .)
    FLOTANTE        reduce using rule 32 (statement -> iteration_stmt .)
    NULO            reduce using rule 32 (statement -> iteration_stmt .)
    SINO            reduce using rule 32 (statement -> iteration_stmt .)
    DEPLANO         reduce using rule 32 (statement -> iteration_stmt .)


state 116

    (36) expression_stmt -> expression . PUNTOCOMA

    PUNTOCOMA       shift and go to state 122


state 117

    (42) para_stmt -> PARA LPAREN . expression COMA expression COMA expression RPAREN statement
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 123
    additive_expression            shift and go to state 25

state 118

    (43) return_stmt -> REGRESA PUNTOCOMA .

    RLLAVE          reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    LLLAVE          reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    SI              reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    MIENTRAS        reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    REGRESA         reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    PARA            reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    FUNCION         reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    ID              reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    LPAREN          reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    NUMERO          reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    CADENA          reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    FLOTANTE        reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    NULO            reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    SINO            reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)
    DEPLANO         reduce using rule 43 (return_stmt -> REGRESA PUNTOCOMA .)


state 119

    (44) return_stmt -> REGRESA expression . PUNTOCOMA

    PUNTOCOMA       shift and go to state 124


state 120

    (41) iteration_stmt -> MIENTRAS LPAREN . expression RPAREN statement
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 125
    additive_expression            shift and go to state 25

state 121

    (38) selection_stmt -> SI LPAREN . expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement
    (39) selection_stmt -> SI LPAREN . expression RPAREN statement SINO LPAREN expression RPAREN statement
    (40) selection_stmt -> SI LPAREN . expression RPAREN statement
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 126
    additive_expression            shift and go to state 25

state 122

    (36) expression_stmt -> expression PUNTOCOMA .

    RLLAVE          reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    LLLAVE          reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    SI              reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    MIENTRAS        reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    REGRESA         reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    PARA            reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    FUNCION         reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    ID              reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    LPAREN          reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    NUMERO          reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    CADENA          reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    FLOTANTE        reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    NULO            reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    SINO            reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)
    DEPLANO         reduce using rule 36 (expression_stmt -> expression PUNTOCOMA .)


state 123

    (42) para_stmt -> PARA LPAREN expression . COMA expression COMA expression RPAREN statement

    COMA            shift and go to state 127


state 124

    (44) return_stmt -> REGRESA expression PUNTOCOMA .

    RLLAVE          reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    LLLAVE          reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    SI              reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    MIENTRAS        reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    REGRESA         reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    PARA            reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    FUNCION         reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    ID              reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    LPAREN          reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    NUMERO          reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    CADENA          reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    FLOTANTE        reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    NULO            reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    SINO            reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)
    DEPLANO         reduce using rule 44 (return_stmt -> REGRESA expression PUNTOCOMA .)


state 125

    (41) iteration_stmt -> MIENTRAS LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 128


state 126

    (38) selection_stmt -> SI LPAREN expression . RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement
    (39) selection_stmt -> SI LPAREN expression . RPAREN statement SINO LPAREN expression RPAREN statement
    (40) selection_stmt -> SI LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 129


state 127

    (42) para_stmt -> PARA LPAREN expression COMA . expression COMA expression RPAREN statement
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 130
    additive_expression            shift and go to state 25

state 128

    (41) iteration_stmt -> MIENTRAS LPAREN expression RPAREN . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) statement -> . para_stmt
    (35) statement -> . fun_declaracion
    (36) expression_stmt -> . expression PUNTOCOMA
    (37) expression_stmt -> . PUNTOCOMA
    (24) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (38) selection_stmt -> . SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement
    (39) selection_stmt -> . SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement
    (40) selection_stmt -> . SI LPAREN expression RPAREN statement
    (41) iteration_stmt -> . MIENTRAS LPAREN expression RPAREN statement
    (43) return_stmt -> . REGRESA PUNTOCOMA
    (44) return_stmt -> . REGRESA expression PUNTOCOMA
    (42) para_stmt -> . PARA LPAREN expression COMA expression COMA expression RPAREN statement
    (16) fun_declaracion -> . FUNCION ID LPAREN params RPAREN compount_stmt
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    PUNTOCOMA       shift and go to state 105
    LLLAVE          shift and go to state 93
    SI              shift and go to state 114
    MIENTRAS        shift and go to state 111
    REGRESA         shift and go to state 109
    PARA            shift and go to state 102
    FUNCION         shift and go to state 9
    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    return_stmt                    shift and go to state 103
    para_stmt                      shift and go to state 104
    simple_expression              shift and go to state 24
    additive_expression            shift and go to state 25
    call                           shift and go to state 27
    statement                      shift and go to state 131
    factor                         shift and go to state 28
    var                            shift and go to state 29
    expression_stmt                shift and go to state 106
    comp_expression                shift and go to state 30
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 108
    term                           shift and go to state 34
    fun_declaracion                shift and go to state 113
    iteration_stmt                 shift and go to state 115
    expression                     shift and go to state 116

state 129

    (38) selection_stmt -> SI LPAREN expression RPAREN . statement SINO LPAREN expression RPAREN statement DEPLANO statement
    (39) selection_stmt -> SI LPAREN expression RPAREN . statement SINO LPAREN expression RPAREN statement
    (40) selection_stmt -> SI LPAREN expression RPAREN . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) statement -> . para_stmt
    (35) statement -> . fun_declaracion
    (36) expression_stmt -> . expression PUNTOCOMA
    (37) expression_stmt -> . PUNTOCOMA
    (24) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (38) selection_stmt -> . SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement
    (39) selection_stmt -> . SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement
    (40) selection_stmt -> . SI LPAREN expression RPAREN statement
    (41) iteration_stmt -> . MIENTRAS LPAREN expression RPAREN statement
    (43) return_stmt -> . REGRESA PUNTOCOMA
    (44) return_stmt -> . REGRESA expression PUNTOCOMA
    (42) para_stmt -> . PARA LPAREN expression COMA expression COMA expression RPAREN statement
    (16) fun_declaracion -> . FUNCION ID LPAREN params RPAREN compount_stmt
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    PUNTOCOMA       shift and go to state 105
    LLLAVE          shift and go to state 93
    SI              shift and go to state 114
    MIENTRAS        shift and go to state 111
    REGRESA         shift and go to state 109
    PARA            shift and go to state 102
    FUNCION         shift and go to state 9
    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    return_stmt                    shift and go to state 103
    para_stmt                      shift and go to state 104
    simple_expression              shift and go to state 24
    additive_expression            shift and go to state 25
    call                           shift and go to state 27
    statement                      shift and go to state 132
    factor                         shift and go to state 28
    var                            shift and go to state 29
    expression_stmt                shift and go to state 106
    comp_expression                shift and go to state 30
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 108
    term                           shift and go to state 34
    fun_declaracion                shift and go to state 113
    iteration_stmt                 shift and go to state 115
    expression                     shift and go to state 116

state 130

    (42) para_stmt -> PARA LPAREN expression COMA expression . COMA expression RPAREN statement

    COMA            shift and go to state 133


state 131

    (41) iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .

    RLLAVE          reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    PUNTOCOMA       reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    LLLAVE          reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    SI              reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    MIENTRAS        reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    REGRESA         reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    PARA            reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    FUNCION         reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    ID              reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    NUMERO          reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    CADENA          reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    FLOTANTE        reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    NULO            reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    SINO            reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)
    DEPLANO         reduce using rule 41 (iteration_stmt -> MIENTRAS LPAREN expression RPAREN statement .)


state 132

    (38) selection_stmt -> SI LPAREN expression RPAREN statement . SINO LPAREN expression RPAREN statement DEPLANO statement
    (39) selection_stmt -> SI LPAREN expression RPAREN statement . SINO LPAREN expression RPAREN statement
    (40) selection_stmt -> SI LPAREN expression RPAREN statement .

  ! shift/reduce conflict for SINO resolved as shift
    SINO            shift and go to state 134
    RLLAVE          reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    PUNTOCOMA       reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    LLLAVE          reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    SI              reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    MIENTRAS        reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    REGRESA         reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    PARA            reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    FUNCION         reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    ID              reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    NUMERO          reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    CADENA          reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    FLOTANTE        reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    NULO            reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)
    DEPLANO         reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .)

  ! SINO            [ reduce using rule 40 (selection_stmt -> SI LPAREN expression RPAREN statement .) ]


state 133

    (42) para_stmt -> PARA LPAREN expression COMA expression COMA . expression RPAREN statement
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 135
    additive_expression            shift and go to state 25

state 134

    (38) selection_stmt -> SI LPAREN expression RPAREN statement SINO . LPAREN expression RPAREN statement DEPLANO statement
    (39) selection_stmt -> SI LPAREN expression RPAREN statement SINO . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 136


state 135

    (42) para_stmt -> PARA LPAREN expression COMA expression COMA expression . RPAREN statement

    RPAREN          shift and go to state 137


state 136

    (38) selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN . expression RPAREN statement DEPLANO statement
    (39) selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN . expression RPAREN statement
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    comp_expression                shift and go to state 30
    term                           shift and go to state 34
    call                           shift and go to state 27
    factor                         shift and go to state 28
    var                            shift and go to state 29
    simple_expression              shift and go to state 24
    expression                     shift and go to state 138
    additive_expression            shift and go to state 25

state 137

    (42) para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) statement -> . para_stmt
    (35) statement -> . fun_declaracion
    (36) expression_stmt -> . expression PUNTOCOMA
    (37) expression_stmt -> . PUNTOCOMA
    (24) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (38) selection_stmt -> . SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement
    (39) selection_stmt -> . SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement
    (40) selection_stmt -> . SI LPAREN expression RPAREN statement
    (41) iteration_stmt -> . MIENTRAS LPAREN expression RPAREN statement
    (43) return_stmt -> . REGRESA PUNTOCOMA
    (44) return_stmt -> . REGRESA expression PUNTOCOMA
    (42) para_stmt -> . PARA LPAREN expression COMA expression COMA expression RPAREN statement
    (16) fun_declaracion -> . FUNCION ID LPAREN params RPAREN compount_stmt
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    PUNTOCOMA       shift and go to state 105
    LLLAVE          shift and go to state 93
    SI              shift and go to state 114
    MIENTRAS        shift and go to state 111
    REGRESA         shift and go to state 109
    PARA            shift and go to state 102
    FUNCION         shift and go to state 9
    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    return_stmt                    shift and go to state 103
    para_stmt                      shift and go to state 104
    simple_expression              shift and go to state 24
    additive_expression            shift and go to state 25
    call                           shift and go to state 27
    statement                      shift and go to state 139
    factor                         shift and go to state 28
    var                            shift and go to state 29
    expression_stmt                shift and go to state 106
    comp_expression                shift and go to state 30
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 108
    term                           shift and go to state 34
    fun_declaracion                shift and go to state 113
    iteration_stmt                 shift and go to state 115
    expression                     shift and go to state 116

state 138

    (38) selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression . RPAREN statement DEPLANO statement
    (39) selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 140


state 139

    (42) para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .

    RLLAVE          reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    PUNTOCOMA       reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    LLLAVE          reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    SI              reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    MIENTRAS        reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    REGRESA         reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    PARA            reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    FUNCION         reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    ID              reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    LPAREN          reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    NUMERO          reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    CADENA          reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    FLOTANTE        reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    NULO            reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    SINO            reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)
    DEPLANO         reduce using rule 42 (para_stmt -> PARA LPAREN expression COMA expression COMA expression RPAREN statement .)


state 140

    (38) selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN . statement DEPLANO statement
    (39) selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) statement -> . para_stmt
    (35) statement -> . fun_declaracion
    (36) expression_stmt -> . expression PUNTOCOMA
    (37) expression_stmt -> . PUNTOCOMA
    (24) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (38) selection_stmt -> . SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement
    (39) selection_stmt -> . SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement
    (40) selection_stmt -> . SI LPAREN expression RPAREN statement
    (41) iteration_stmt -> . MIENTRAS LPAREN expression RPAREN statement
    (43) return_stmt -> . REGRESA PUNTOCOMA
    (44) return_stmt -> . REGRESA expression PUNTOCOMA
    (42) para_stmt -> . PARA LPAREN expression COMA expression COMA expression RPAREN statement
    (16) fun_declaracion -> . FUNCION ID LPAREN params RPAREN compount_stmt
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    PUNTOCOMA       shift and go to state 105
    LLLAVE          shift and go to state 93
    SI              shift and go to state 114
    MIENTRAS        shift and go to state 111
    REGRESA         shift and go to state 109
    PARA            shift and go to state 102
    FUNCION         shift and go to state 9
    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    return_stmt                    shift and go to state 103
    para_stmt                      shift and go to state 104
    simple_expression              shift and go to state 24
    additive_expression            shift and go to state 25
    call                           shift and go to state 27
    statement                      shift and go to state 141
    factor                         shift and go to state 28
    var                            shift and go to state 29
    expression_stmt                shift and go to state 106
    comp_expression                shift and go to state 30
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 108
    term                           shift and go to state 34
    fun_declaracion                shift and go to state 113
    iteration_stmt                 shift and go to state 115
    expression                     shift and go to state 116

state 141

    (38) selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement . DEPLANO statement
    (39) selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .

  ! shift/reduce conflict for DEPLANO resolved as shift
    DEPLANO         shift and go to state 142
    RLLAVE          reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    PUNTOCOMA       reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    LLLAVE          reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    SI              reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    MIENTRAS        reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    REGRESA         reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    PARA            reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    FUNCION         reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    ID              reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    NUMERO          reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    CADENA          reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    FLOTANTE        reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    NULO            reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)
    SINO            reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .)

  ! DEPLANO         [ reduce using rule 39 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement .) ]


state 142

    (38) selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO . statement
    (29) statement -> . expression_stmt
    (30) statement -> . compount_stmt
    (31) statement -> . selection_stmt
    (32) statement -> . iteration_stmt
    (33) statement -> . return_stmt
    (34) statement -> . para_stmt
    (35) statement -> . fun_declaracion
    (36) expression_stmt -> . expression PUNTOCOMA
    (37) expression_stmt -> . PUNTOCOMA
    (24) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (38) selection_stmt -> . SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement
    (39) selection_stmt -> . SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement
    (40) selection_stmt -> . SI LPAREN expression RPAREN statement
    (41) iteration_stmt -> . MIENTRAS LPAREN expression RPAREN statement
    (43) return_stmt -> . REGRESA PUNTOCOMA
    (44) return_stmt -> . REGRESA expression PUNTOCOMA
    (42) para_stmt -> . PARA LPAREN expression COMA expression COMA expression RPAREN statement
    (16) fun_declaracion -> . FUNCION ID LPAREN params RPAREN compount_stmt
    (45) expression -> . var IGUAL expression
    (46) expression -> . comp_expression
    (47) var -> . ID
    (48) var -> . ID LCORCHETE expression RCORCHETE
    (49) comp_expression -> . simple_expression compop simple_expression
    (50) comp_expression -> . simple_expression
    (55) simple_expression -> . additive_expression relop additive_expression
    (56) simple_expression -> . additive_expression
    (64) additive_expression -> . additive_expression addop term
    (65) additive_expression -> . term
    (68) term -> . term mulop factor
    (69) term -> . factor
    (72) factor -> . LPAREN expression RPAREN
    (73) factor -> . var
    (74) factor -> . call
    (75) factor -> . NUMERO
    (76) factor -> . CADENA
    (77) factor -> . FLOTANTE
    (78) factor -> . NULO
    (79) call -> . ID LPAREN args RPAREN

    PUNTOCOMA       shift and go to state 105
    LLLAVE          shift and go to state 93
    SI              shift and go to state 114
    MIENTRAS        shift and go to state 111
    REGRESA         shift and go to state 109
    PARA            shift and go to state 102
    FUNCION         shift and go to state 9
    ID              shift and go to state 33
    LPAREN          shift and go to state 32
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 26
    FLOTANTE        shift and go to state 35
    NULO            shift and go to state 23

    return_stmt                    shift and go to state 103
    para_stmt                      shift and go to state 104
    simple_expression              shift and go to state 24
    additive_expression            shift and go to state 25
    call                           shift and go to state 27
    statement                      shift and go to state 143
    factor                         shift and go to state 28
    var                            shift and go to state 29
    expression_stmt                shift and go to state 106
    comp_expression                shift and go to state 30
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 108
    term                           shift and go to state 34
    fun_declaracion                shift and go to state 113
    iteration_stmt                 shift and go to state 115
    expression                     shift and go to state 116

state 143

    (38) selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .

    RLLAVE          reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    PUNTOCOMA       reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    LLLAVE          reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    SI              reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    MIENTRAS        reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    REGRESA         reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    PARA            reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    FUNCION         reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    ID              reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    LPAREN          reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    NUMERO          reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    CADENA          reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    FLOTANTE        reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    NULO            reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    SINO            reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)
    DEPLANO         reduce using rule 38 (selection_stmt -> SI LPAREN expression RPAREN statement SINO LPAREN expression RPAREN statement DEPLANO statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 97 resolved as shift
WARNING: shift/reduce conflict for SINO in state 132 resolved as shift
WARNING: shift/reduce conflict for DEPLANO in state 141 resolved as shift
WARNING: reduce/reduce conflict in state 69 resolved using rule (params -> empty)
WARNING: rejected rule (param_list -> empty) in state 69
